{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/JsTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport testResult from './testResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst JsTest = props => {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleReturnOption = currentQuestion => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  const handleResult = () => {\n    setView(\"result\");\n  };\n\n  const percentage = score / questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"JavaScript Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-section\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleResult(),\n                className: \"btn btn-primary\",\n                children: \"View Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), view === \"result\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-section\",\n                children: [\"You scored \", score, \" out of \", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12\",\n                children: testResult.map(result => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: result.isCorrect.toString(),\n                  children: [\" \", `${result.answerNum}. ${result.answerText}`, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 20\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: percentage + \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"false\",\n                children: \"Anything in Red is wrong\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), percentage >= 65 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-container-test\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageCongrats,\n                  alt: \"congrats\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-text\",\n                  children: `${info.firstName} ${info.lastName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-course\",\n                  children: \"JavaScript\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 9\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Please try again later and remember to study\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true) : false]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                value: answerOption.isCorrect,\n                onClick: currentanswer => {\n                  testResult.push(answerOption);\n                  handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                },\n                children: answerOption.answerText\n              }, questions.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), currentQuestion > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"return\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReturnOption(currentQuestion),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this) : false]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JsTest, \"EUPFpPJZtx0w1duWOSNYzPM6ymc=\");\n\n_c = JsTest;\nexport default JsTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"JsTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/JsTest.jsx"],"names":["React","useState","imageCongrats","info","testResult","JsTest","props","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","view","setView","handleAnswerOptionClick","isCorrect","nextQuestion","questions","length","handleReturnOption","goBack","handleResult","percentage","map","result","toString","answerNum","answerText","firstName","lastName","questionText","answerOptions","answerOption","currentanswer","push","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport testResult from './testResult'; \n\nconst JsTest = (props) => { \n\n\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n  \n  const handleAnswerOptionClick = (isCorrect) => {  \n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    \n  };\n\n  const handleReturnOption = (currentQuestion) => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n  const handleResult = () => { \n    setView(\"result\")\n  }\n\n  const percentage = (score/questions.length) * 100;\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>JavaScript Test</h1>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"app\">\n            {showScore ? (\n              <>\n                <div className=\"score-section\">\n                  \n                  <button onClick={() => handleResult() } className=\"btn btn-primary\">View Result</button>\n                </div>\n                { \n                view === \"result\" ? ( \n                  <>\n                  <div className='score-section'>\n                    You scored {score} out of {questions.length}\n                  </div>\n                  <div className='col-12'>\n                    {\n                      \n                      testResult.map((result) => ( \n                       \n                   <p className={result.isCorrect.toString()}> {`${result.answerNum}. ${result.answerText}`} </p>\n                  \n\n                        \n                      \n                      ))\n                    }\n                  </div>\n                  <br/>\n                  <p>{ percentage + \"%\" }</p>\n                  <p className='false'>Anything in Red is wrong</p>\n\n                  {percentage >= 65 ?( \n        <div className=\"image-container-test\">\n        <img src={imageCongrats} alt=\"congrats\" />\n        <p className=\"image-text\">{`${info.firstName} ${info.lastName}`}</p>\n        <p className='image-course'>JavaScript</p>\n      </div>\n    ) : ( \n         \n        <div className='row'>\n            <h4>Please try again later and remember to study</h4>\n        </div>\n    ) \n}\n\n                  </>\n                ): false\n                }\n              </>\n            ) : (\n              <>\n                <div className=\"question-section\">\n                  <div className=\"question-count\">\n                    <span>Question {currentQuestion + 1}</span>/\n                    {questions.length}\n                  </div>\n                  <div className=\"question-text\">\n                    {questions[currentQuestion].questionText}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  {questions[currentQuestion].answerOptions.map(\n                    (answerOption) => (\n                      <button\n                        key={questions.id}\n                        value={answerOption.isCorrect}\n                        onClick={(currentanswer) => {\n                          testResult.push(answerOption);\n                          handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                        }}\n                      >\n                        {answerOption.answerText}\n                      </button>\n\n                    ) \n                  )}\n                </div> \n\n\n\n                {currentQuestion > 0 ? (\n                  <div className=\"return\">\n                    <button onClick={() => handleReturnOption(currentQuestion)}>\n                      Back\n                    </button>\n                  </div>\n                ) : (\n                  false\n                )}\n              </>\n            )} \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JsTest; "]},"metadata":{},"sourceType":"module"}