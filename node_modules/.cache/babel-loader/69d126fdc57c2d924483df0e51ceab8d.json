{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/JsTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst JsTest = props => {\n  _s();\n\n  console.log(props.type);\n  const questions = [{\n    questionText: 'What must a variable begin with?',\n    answerOptions: [{\n      answerText: 'HTML tag',\n      isCorrect: false\n    }, {\n      answerText: 'CSS tag',\n      isCorrect: false\n    }, {\n      answerText: 'A letter, $ or _',\n      isCorrect: true\n    }, {\n      answerText: 'Nothing',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What is a variable?',\n    answerOptions: [{\n      answerText: 'A loop',\n      isCorrect: false\n    }, {\n      answerText: 'Container for a piece of data',\n      isCorrect: true\n    }, {\n      answerText: 'Nothing',\n      isCorrect: false\n    }, {\n      answerText: 'A file',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How do you declare variables?',\n    answerOptions: [{\n      answerText: 'var, let and const keywords',\n      isCorrect: true\n    }, {\n      answerText: 'variable',\n      isCorrect: false\n    }, {\n      answerText: 'A = sign',\n      isCorrect: false\n    }, {\n      answerText: 'A keyword',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'DOM stands for?',\n    answerOptions: [{\n      answerText: 'Document Out Matter',\n      isCorrect: false\n    }, {\n      answerText: 'Document Outter Mammals',\n      isCorrect: false\n    }, {\n      answerText: 'Document Other Meaning',\n      isCorrect: false\n    }, {\n      answerText: 'Document Object Model',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleReturnOption = currentQuestion => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  const handleResult = () => {\n    setView(\"result\");\n  };\n\n  const percentage = score / questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"JavaScript Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-section\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleResult(),\n                className: \"btn btn-primary\",\n                children: \"View Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), view === \"result\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-section\",\n                children: [\"You scored \", score, \" out of \", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12\",\n                children: testResult.map(result => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: result.isCorrect.toString(),\n                  children: [\" \", `${result.answerNum}. ${result.answerText}`, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 20\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: percentage + \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"false\",\n                children: \"Anything in Red is wrong\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), percentage >= 65 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-container-test\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageCongrats,\n                  alt: \"congrats\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-text\",\n                  children: `${info.firstName} ${info.lastName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-course\",\n                  children: \"JavaScript\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 9\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Please try again later and remember to study\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true) : false]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                value: answerOption.isCorrect,\n                onClick: currentanswer => {\n                  testResult.push(answerOption);\n                  handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                },\n                children: answerOption.answerText\n              }, questions.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), currentQuestion > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"return\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReturnOption(currentQuestion),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this) : false]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JsTest, \"EUPFpPJZtx0w1duWOSNYzPM6ymc=\");\n\n_c = JsTest;\nexport default JsTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"JsTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/JsTest.jsx"],"names":["React","useState","imageCongrats","info","JsTest","props","console","log","type","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","view","setView","handleAnswerOptionClick","nextQuestion","length","handleReturnOption","goBack","handleResult","percentage","testResult","map","result","toString","answerNum","firstName","lastName","answerOption","currentanswer","push","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\n\nconst JsTest = (props) => { \nconsole.log(props.type)\nconst questions = [\n    {\n        questionText: 'What must a variable begin with?',\n        answerOptions: [\n            { answerText: 'HTML tag', isCorrect: false },\n            { answerText: 'CSS tag', isCorrect: false },\n            { answerText: 'A letter, $ or _', isCorrect: true },\n            { answerText: 'Nothing', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'What is a variable?',\n        answerOptions: [\n            { answerText: 'A loop', isCorrect: false },\n            { answerText: 'Container for a piece of data', isCorrect: true },\n            { answerText: 'Nothing', isCorrect: false },\n            { answerText: 'A file', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'How do you declare variables?',\n        answerOptions: [\n            { answerText: 'var, let and const keywords', isCorrect: true },\n            { answerText: 'variable', isCorrect: false },\n            { answerText: 'A = sign', isCorrect: false },\n            { answerText: 'A keyword', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'DOM stands for?',\n        answerOptions: [\n            { answerText: 'Document Out Matter', isCorrect: false },\n            { answerText: 'Document Outter Mammals', isCorrect: false },\n            { answerText: 'Document Other Meaning', isCorrect: false },\n            { answerText: 'Document Object Model', isCorrect: true },\n        ],\n    },\n];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n  \n  const handleAnswerOptionClick = (isCorrect) => {  \n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    \n  };\n\n  const handleReturnOption = (currentQuestion) => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n  const handleResult = () => { \n    setView(\"result\")\n  }\n\n  const percentage = (score/questions.length) * 100;\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>JavaScript Test</h1>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"app\">\n            {showScore ? (\n              <>\n                <div className=\"score-section\">\n                  \n                  <button onClick={() => handleResult() } className=\"btn btn-primary\">View Result</button>\n                </div>\n                { \n                view === \"result\" ? ( \n                  <>\n                  <div className='score-section'>\n                    You scored {score} out of {questions.length}\n                  </div>\n                  <div className='col-12'>\n                    {\n                      \n                      testResult.map((result) => ( \n                       \n                   <p className={result.isCorrect.toString()}> {`${result.answerNum}. ${result.answerText}`} </p>\n                  \n\n                        \n                      \n                      ))\n                    }\n                  </div>\n                  <br/>\n                  <p>{ percentage + \"%\" }</p>\n                  <p className='false'>Anything in Red is wrong</p>\n\n                  {percentage >= 65 ?( \n        <div className=\"image-container-test\">\n        <img src={imageCongrats} alt=\"congrats\" />\n        <p className=\"image-text\">{`${info.firstName} ${info.lastName}`}</p>\n        <p className='image-course'>JavaScript</p>\n      </div>\n    ) : ( \n         \n        <div className='row'>\n            <h4>Please try again later and remember to study</h4>\n        </div>\n    ) \n}\n\n                  </>\n                ): false\n                }\n              </>\n            ) : (\n              <>\n                <div className=\"question-section\">\n                  <div className=\"question-count\">\n                    <span>Question {currentQuestion + 1}</span>/\n                    {questions.length}\n                  </div>\n                  <div className=\"question-text\">\n                    {questions[currentQuestion].questionText}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  {questions[currentQuestion].answerOptions.map(\n                    (answerOption) => (\n                      <button\n                        key={questions.id}\n                        value={answerOption.isCorrect}\n                        onClick={(currentanswer) => {\n                          testResult.push(answerOption);\n                          handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                        }}\n                      >\n                        {answerOption.answerText}\n                      </button>\n\n                    ) \n                  )}\n                </div> \n\n\n\n                {currentQuestion > 0 ? (\n                  <div className=\"return\">\n                    <button onClick={() => handleReturnOption(currentQuestion)}>\n                      Back\n                    </button>\n                  </div>\n                ) : (\n                  false\n                )}\n              </>\n            )} \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JsTest; "]},"metadata":{},"sourceType":"module"}