{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/HtmlTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport testResult from './testResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HtmlTest = props => {\n  _s();\n\n  const questions = [{\n    questionText: 'What does HTML stand for?',\n    answerOptions: [{\n      answerText: 'Human Text Mark Language',\n      isCorrect: false,\n      answerNum: 1\n    }, {\n      answerText: 'Hyper Language',\n      isCorrect: false,\n      answerNum: 1\n    }, {\n      answerText: 'Hyper Text Markup Language',\n      isCorrect: true,\n      answerNum: 1\n    }, {\n      answerText: 'Hands Talk Mask Long',\n      isCorrect: false,\n      answerNum: 1\n    }]\n  }, {\n    questionText: 'What does <!DOCTYPE html> mean?',\n    answerOptions: [{\n      answerText: 'HTML tag',\n      isCorrect: false,\n      answerNum: 2\n    }, {\n      answerText: 'declaration defines this document to be HTML5',\n      isCorrect: true,\n      answerNum: 2\n    }, {\n      answerText: 'HTML4',\n      isCorrect: false,\n      answerNum: 2\n    }, {\n      answerText: 'declaration defines this HTML5',\n      isCorrect: false,\n      answerNum: 2\n    }]\n  }, {\n    questionText: 'The <html> element is?',\n    answerOptions: [{\n      answerText: 'The root element of an HTML page',\n      isCorrect: true,\n      answerNum: 3\n    }, {\n      answerText: 'Title element',\n      isCorrect: false,\n      answerNum: 3\n    }, {\n      answerText: 'Opening element for a paragrapgh',\n      isCorrect: false,\n      answerNum: 3\n    }, {\n      answerText: 'declaration defines this HTML5',\n      isCorrect: false,\n      answerNum: 3\n    }]\n  }, {\n    questionText: '<h1> heading tags?',\n    answerOptions: [{\n      answerText: 'A break in a parapgrapgh',\n      isCorrect: false,\n      answerNum: 4\n    }, {\n      answerText: 'A Heading image tag',\n      isCorrect: false,\n      answerNum: 4\n    }, {\n      answerText: 'A Form tag',\n      isCorrect: false,\n      answerNum: 4\n    }, {\n      answerText: 'Start from 1 to 6. But you can always adjust the size',\n      isCorrect: true,\n      answerNum: 4\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleReturnOption = currentQuestion => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  const handleResult = () => {\n    setView(\"result\");\n  };\n\n  const percentage = score / questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"HTML Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-section\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleResult(),\n                className: \"btn btn-primary\",\n                children: \"View Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), view === \"result\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-section\",\n                children: [\"You scored \", score, \" out of \", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12\",\n                children: testResult.map(result => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: result.isCorrect.toString(),\n                  children: [\" \", `${result.answerNum}. ${result.answerText}`, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 20\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: percentage + \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"false\",\n                children: \"Anything in Red is wrong\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), percentage >= 65 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-container-test\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageCongrats,\n                  alt: \"congrats\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-text\",\n                  children: `${info.firstName} ${info.lastName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-course\",\n                  children: \"HTML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 9\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Please try again later and remember to study\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true) : false]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                value: answerOption.isCorrect,\n                onClick: currentanswer => {\n                  testResult.push(answerOption);\n                  handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                },\n                children: answerOption.answerText\n              }, questions.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), currentQuestion > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"return\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReturnOption(currentQuestion),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this) : false]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HtmlTest, \"EUPFpPJZtx0w1duWOSNYzPM6ymc=\");\n\n_c = HtmlTest;\nexport default HtmlTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"HtmlTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/HtmlTest.jsx"],"names":["React","useState","imageCongrats","info","testResult","HtmlTest","props","questions","questionText","answerOptions","answerText","isCorrect","answerNum","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","view","setView","handleAnswerOptionClick","nextQuestion","length","handleReturnOption","goBack","handleResult","percentage","map","result","toString","firstName","lastName","answerOption","currentanswer","push","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport testResult from './testResult'; \n\nconst HtmlTest = (props) => { \n\nconst questions = [\n    {\n        questionText: 'What does HTML stand for?',\n        answerOptions: [\n            { answerText: 'Human Text Mark Language', isCorrect: false ,answerNum: 1},\n            { answerText: 'Hyper Language', isCorrect: false ,answerNum: 1 },\n            { answerText: 'Hyper Text Markup Language', isCorrect: true ,answerNum: 1 },\n            { answerText: 'Hands Talk Mask Long', isCorrect: false ,answerNum: 1 },\n        ],\n    },\n    {\n        questionText: 'What does <!DOCTYPE html> mean?',\n        answerOptions: [\n            { answerText: 'HTML tag', isCorrect: false , answerNum: 2 },\n            { answerText: 'declaration defines this document to be HTML5', isCorrect: true  , answerNum: 2},\n            { answerText: 'HTML4', isCorrect: false , answerNum: 2 },\n            { answerText: 'declaration defines this HTML5', isCorrect: false  , answerNum: 2},\n        ],\n    },\n    {\n        questionText: 'The <html> element is?',\n        answerOptions: [\n            { answerText: 'The root element of an HTML page', isCorrect: true, answerNum: 3 },\n            { answerText: 'Title element', isCorrect: false , answerNum: 3  },\n            { answerText: 'Opening element for a paragrapgh', isCorrect: false , answerNum: 3  },\n            { answerText: 'declaration defines this HTML5', isCorrect: false , answerNum: 3  },\n        ],\n    },\n    {\n        questionText: '<h1> heading tags?',\n        answerOptions: [\n            { answerText: 'A break in a parapgrapgh', isCorrect: false , answerNum: 4  },\n            { answerText: 'A Heading image tag', isCorrect: false , answerNum: 4 },\n            { answerText: 'A Form tag', isCorrect: false  , answerNum: 4 },\n            { answerText: 'Start from 1 to 6. But you can always adjust the size', isCorrect: true , answerNum: 4  },\n        ],\n    },\n];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n  \n  const handleAnswerOptionClick = (isCorrect) => {  \n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    \n  };\n\n  const handleReturnOption = (currentQuestion) => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n  const handleResult = () => { \n    setView(\"result\")\n  }\n\n  const percentage = (score/questions.length) * 100;\n  \n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>HTML Test</h1>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"app\">\n            {showScore ? (\n              <>\n                <div className=\"score-section\">\n                  \n                  <button onClick={() => handleResult() } className=\"btn btn-primary\">View Result</button>\n                </div>\n                { \n                view === \"result\" ? ( \n                  <>\n                  <div className='score-section'>\n                    You scored {score} out of {questions.length}\n                  </div>\n                  <div className='col-12'>\n                    {\n                      \n                      testResult.map((result) => ( \n                       \n                   <p className={result.isCorrect.toString()}> {`${result.answerNum}. ${result.answerText}`} </p>\n                  \n\n                        \n                      \n                      ))\n                    }\n                  </div>\n                  <br/>\n                  <p>{ percentage + \"%\" }</p>\n                  <p className='false'>Anything in Red is wrong</p>\n\n                  {percentage >= 65 ?( \n        <div className=\"image-container-test\">\n        <img src={imageCongrats} alt=\"congrats\" />\n        <p className=\"image-text\">{`${info.firstName} ${info.lastName}`}</p>\n        <p className='image-course'>HTML</p>\n      </div>\n    ) : ( \n         \n        <div className='row'>\n            <h4>Please try again later and remember to study</h4>\n        </div>\n    ) \n}\n\n                  </>\n                ): false\n                }\n              </>\n            ) : (\n              <>\n                <div className=\"question-section\">\n                  <div className=\"question-count\">\n                    <span>Question {currentQuestion + 1}</span>/\n                    {questions.length}\n                  </div>\n                  <div className=\"question-text\">\n                    {questions[currentQuestion].questionText}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  {questions[currentQuestion].answerOptions.map(\n                    (answerOption) => (\n                      <button\n                        key={questions.id}\n                        value={answerOption.isCorrect}\n                        onClick={(currentanswer) => {\n                          testResult.push(answerOption);\n                          handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                        }}\n                      >\n                        {answerOption.answerText}\n                      </button>\n\n                    ) \n                  )}\n                </div> \n\n\n\n                {currentQuestion > 0 ? (\n                  <div className=\"return\">\n                    <button onClick={() => handleReturnOption(currentQuestion)}>\n                      Back\n                    </button>\n                  </div>\n                ) : (\n                  false\n                )}\n              </>\n            )} \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HtmlTest; "]},"metadata":{},"sourceType":"module"}