{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/HtmlTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HtmlTest = props => {\n  _s();\n\n  console.log(props.type);\n  const questions = [{\n    questionText: 'What does HTML stand for?',\n    answerOptions: [{\n      answerText: 'Human Text Mark Language',\n      isCorrect: false\n    }, {\n      answerText: 'Hyper Language',\n      isCorrect: false\n    }, {\n      answerText: 'Hyper Text Markup Language',\n      isCorrect: true\n    }, {\n      answerText: 'Hands Talk Mask Long',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What does <!DOCTYPE html> mean?',\n    answerOptions: [{\n      answerText: 'HTML tag',\n      isCorrect: false\n    }, {\n      answerText: 'declaration defines this document to be HTML5',\n      isCorrect: true\n    }, {\n      answerText: 'HTML4',\n      isCorrect: false\n    }, {\n      answerText: 'declaration defines this HTML5',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The <html> element is?',\n    answerOptions: [{\n      answerText: 'The root element of an HTML page',\n      isCorrect: true\n    }, {\n      answerText: 'Title element',\n      isCorrect: false\n    }, {\n      answerText: 'Opening element for a paragrapgh',\n      isCorrect: false\n    }, {\n      answerText: 'declaration defines this HTML5',\n      isCorrect: false\n    }]\n  }, {\n    questionText: '<h1> heading tags?',\n    answerOptions: [{\n      answerText: 'A break in a parapgrapgh',\n      isCorrect: false\n    }, {\n      answerText: 'A Heading image tag',\n      isCorrect: false\n    }, {\n      answerText: 'A Form tag',\n      isCorrect: false\n    }, {\n      answerText: 'Start from 1 to 6. But you can always adjust the size',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleReturnOption = currentQuestion => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-section\",\n              children: [\"You scored \", score, \" out of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), score >= questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container-test\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageCongrats,\n                alt: \"congrats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"image-text\",\n                children: `${info.firstName} ${info.lastName}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Please try again later and remember to study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                value: answerOption.isCorrect,\n                onClick: currentanswer => {\n                  handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                },\n                children: answerOption.answerText\n              }, questions.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), currentQuestion > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"return\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReturnOption(currentQuestion),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this) : false]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HtmlTest, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = HtmlTest;\nexport default HtmlTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"HtmlTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/HtmlTest.jsx"],"names":["React","useState","HtmlTest","props","console","log","type","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","handleReturnOption","goBack","imageCongrats","info","firstName","lastName","map","answerOption","currentanswer","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nconst HtmlTest = (props) => { \nconsole.log(props.type)\nconst questions = [\n    {\n        questionText: 'What does HTML stand for?',\n        answerOptions: [\n            { answerText: 'Human Text Mark Language', isCorrect: false },\n            { answerText: 'Hyper Language', isCorrect: false },\n            { answerText: 'Hyper Text Markup Language', isCorrect: true },\n            { answerText: 'Hands Talk Mask Long', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'What does <!DOCTYPE html> mean?',\n        answerOptions: [\n            { answerText: 'HTML tag', isCorrect: false },\n            { answerText: 'declaration defines this document to be HTML5', isCorrect: true },\n            { answerText: 'HTML4', isCorrect: false },\n            { answerText: 'declaration defines this HTML5', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'The <html> element is?',\n        answerOptions: [\n            { answerText: 'The root element of an HTML page', isCorrect: true },\n            { answerText: 'Title element', isCorrect: false },\n            { answerText: 'Opening element for a paragrapgh', isCorrect: false },\n            { answerText: 'declaration defines this HTML5', isCorrect: false },\n        ],\n    },\n    {\n        questionText: '<h1> heading tags?',\n        answerOptions: [\n            { answerText: 'A break in a parapgrapgh', isCorrect: false },\n            { answerText: 'A Heading image tag', isCorrect: false },\n            { answerText: 'A Form tag', isCorrect: false },\n            { answerText: 'Start from 1 to 6. But you can always adjust the size', isCorrect: true },\n        ],\n    },\n];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  \n  const handleAnswerOptionClick = (isCorrect) => {  \n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    \n  };\n\n  const handleReturnOption = (currentQuestion) => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>React Test</h1>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"app\">\n            {showScore ? (\n              <>\n                <div className=\"score-section\">\n                  You scored {score} out of {questions.length}\n                </div>\n\n                { \n                \n                    score >= questions.length -1 ?( \n                        <div className=\"image-container-test\">\n                        <img src={imageCongrats} alt=\"congrats\" />\n                        <p className=\"image-text\">{`${info.firstName} ${info.lastName}`}</p>\n                      </div>\n                    ) : ( \n\n                        <div className='row'>\n                            <h4>Please try again later and remember to study</h4>\n                        </div>\n                    )\n                }\n               \n              </>\n            ) : (\n              <>\n                <div className=\"question-section\">\n                  <div className=\"question-count\">\n                    <span>Question {currentQuestion + 1}</span>/\n                    {questions.length}\n                  </div>\n                  <div className=\"question-text\">\n                    {questions[currentQuestion].questionText}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  {questions[currentQuestion].answerOptions.map(\n                    (answerOption) => (\n                      <button\n                        key={questions.id}\n                        value={answerOption.isCorrect}\n                        onClick={(currentanswer) => {\n                          handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                        }}\n                      >\n                        {answerOption.answerText}\n                      </button>\n                    )\n                  )}\n                </div>\n\n                {currentQuestion > 0 ? (\n                  <div className=\"return\">\n                    <button onClick={() => handleReturnOption(currentQuestion)}>\n                      Back\n                    </button>\n                  </div>\n                ) : (\n                  false\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HtmlTest;\n"]},"metadata":{},"sourceType":"module"}