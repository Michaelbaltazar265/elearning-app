{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/ReactTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReactTest = () => {\n  _s();\n\n  const questions = [{\n    id: 1,\n    answer: {},\n    questionText: 'What is Babel and what does it do?',\n    answerOptions: [{\n      answerText: 'It has nothing to do with React',\n      isCorrect: false\n    }, {\n      answerText: 'Its a Song',\n      isCorrect: false\n    }, {\n      answerText: 'Babel is a great tool for transpiling our React code (which is JSX) and our ES6 code at the same time.',\n      isCorrect: true\n    }, {\n      answerText: 'Its state',\n      isCorrect: false\n    }]\n  }, {\n    id: 2,\n    answer: {},\n    questionText: 'What is package.JSON?',\n    answerOptions: [{\n      answerText: 'React file',\n      isCorrect: false\n    }, {\n      answerText: 'It outlines all the dependencies a project needs to run.',\n      isCorrect: true\n    }, {\n      answerText: 'Call an API',\n      isCorrect: false\n    }, {\n      answerText: 'Main file for your project',\n      isCorrect: false\n    }]\n  }, {\n    id: 3,\n    answer: {},\n    questionText: 'Everything in React is a ______?',\n    answerOptions: [{\n      answerText: 'Component',\n      isCorrect: true\n    }, {\n      answerText: 'Package',\n      isCorrect: false\n    }, {\n      answerText: 'Class',\n      isCorrect: false\n    }, {\n      answerText: 'Module',\n      isCorrect: false\n    }]\n  }, {\n    id: 4,\n    answer: {},\n    questionText: 'What is state in React?',\n    answerOptions: [{\n      answerText: 'A persistant storage',\n      isCorrect: false\n    }, {\n      answerText: 'Nothing',\n      isCorrect: false\n    }, {\n      answerText: 'A call back',\n      isCorrect: false\n    }, {\n      answerText: 'An internal data store (object) of a component',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n      console.log(questions);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleReturnOption = currentQuestion => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-section\",\n              children: [\"You scored \", score, \" out of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questions-answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 8\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                value: answerOption.isCorrect,\n                onClick: currentanswer => {\n                  handleAnswerOptionClick(answerOption.isCorrect); //  let answerText = currentanswer.target.innerHTML\n                  //  let isCorrectText =  currentanswer.target.value\n\n                  console.log(answerOption);\n                  console.log(questions);\n                },\n                children: answerOption.answerText\n              }, questions.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 6\n            }, this), currentQuestion > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"return\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReturnOption(currentQuestion),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this) : false]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactTest, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = ReactTest;\nexport default ReactTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/ReactTest.jsx"],"names":["React","useState","ReactTest","questions","id","answer","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","console","log","nextQuestion","length","handleReturnOption","goBack","map","answerOption","currentanswer"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nconst ReactTest = () => { \n\nconst questions = [\n    {\n        id: 1,\n        answer: {},\n        questionText: 'What is Babel and what does it do?',\n        answerOptions: [\n            { answerText: 'It has nothing to do with React', isCorrect: false },\n            { answerText: 'Its a Song', isCorrect: false },\n            { answerText: 'Babel is a great tool for transpiling our React code (which is JSX) and our ES6 code at the same time.', isCorrect: true },\n            { answerText: 'Its state', isCorrect: false },\n        ],\n        \n    },\n    {   \n        id: 2,\n        answer: {},\n        questionText: 'What is package.JSON?',\n        answerOptions: [\n            { answerText: 'React file', isCorrect: false },\n            { answerText: 'It outlines all the dependencies a project needs to run.', isCorrect: true },\n            { answerText: 'Call an API', isCorrect: false },\n            { answerText: 'Main file for your project', isCorrect: false },\n        ],\n        \n    },\n    {   \n        id: 3,\n        answer: {},\n        questionText: 'Everything in React is a ______?',\n        answerOptions: [\n            { answerText: 'Component', isCorrect: true },\n            { answerText: 'Package', isCorrect: false },\n            { answerText: 'Class', isCorrect: false },\n            { answerText: 'Module', isCorrect: false },\n        ],\n       \n    },\n    {\n        id: 4,\n        answer: {},\n        questionText: 'What is state in React?',\n        answerOptions: [\n            { answerText: 'A persistant storage', isCorrect: false },\n            { answerText: 'Nothing', isCorrect: false },\n            { answerText: 'A call back', isCorrect: false },\n            { answerText: 'An internal data store (object) of a component', isCorrect: true },\n        ],\n        \n    },\n];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\nconst [showScore, setShowScore] = useState(false);\nconst [score, setScore] = useState(0);\n\n\nconst handleAnswerOptionClick = (isCorrect) => {\n\n    if (isCorrect) {\n        setScore(score + 1);\n\n\n\n       console.log(questions)\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n    } else {\n        setShowScore(true);\n    }\n};\n\nconst handleReturnOption = (currentQuestion) => { \n    if (currentQuestion){ \n        const goBack = currentQuestion -1; \n        setCurrentQuestion(goBack);\n    }\n}\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>React Test</h1>\n        </div>\n        <div className='col-12'>\n        <div className='app'>\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n                </div> \n                <div className='questions-answer'>\n                   { \n                         \n                   }\n                    \n                </div>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n                            \n                            <button key={questions.id} value={answerOption.isCorrect} onClick={(currentanswer)  => {                \n                                 handleAnswerOptionClick(answerOption.isCorrect);\n                                //  let answerText = currentanswer.target.innerHTML\n                                //  let isCorrectText =  currentanswer.target.value\n                                console.log(answerOption);\n                                console.log(questions)\n                                 \n                            }\n                            }\n                                >{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n                    \n                            { \n                                currentQuestion > 0 ? ( \n                                    <div className=\"return\">\n                                        <button onClick={()=>handleReturnOption(currentQuestion)} >Back</button>\n                                    </div>\n                                ) : false\n\n                            }\n                       \n                       \n                        \n\n                    \n                   \n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReactTest;\n"]},"metadata":{},"sourceType":"module"}