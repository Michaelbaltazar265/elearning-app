{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/CssTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport testResult from './testResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CssTest = props => {\n  _s();\n\n  const questions = [{\n    questionText: 'What does CSS stand for?',\n    answerOptions: [{\n      answerText: 'Creative Style Sheets',\n      isCorrect: false,\n      answerNum: 1\n    }, {\n      answerText: 'Computer Style Sheets',\n      isCorrect: false,\n      answerNum: 1\n    }, {\n      answerText: 'Cascading Style Sheets',\n      isCorrect: true,\n      answerNum: 1\n    }, {\n      answerText: 'Colorful Style Sheets ',\n      isCorrect: false,\n      answerNum: 1\n    }]\n  }, {\n    questionText: 'Why Use CSS?',\n    answerOptions: [{\n      answerText: 'To show content on the web pages',\n      isCorrect: false,\n      answerNum: 2\n    }, {\n      answerText: 'CSS is used to define styles for your web pages',\n      isCorrect: true,\n      answerNum: 2\n    }, {\n      answerText: 'To write code',\n      isCorrect: false,\n      answerNum: 2\n    }, {\n      answerText: 'To display a form',\n      isCorrect: false,\n      answerNum: 2\n    }]\n  }, {\n    questionText: 'Linking your HTML and CSS files.',\n    answerOptions: [{\n      answerText: '<link href=\"file.css\">',\n      isCorrect: true,\n      answerNum: 3\n    }, {\n      answerText: '<link hre=\"file.CSS\">',\n      isCorrect: false,\n      answerNum: 3\n    }, {\n      answerText: '<link href=\"css\">',\n      isCorrect: false,\n      answerNum: 3\n    }, {\n      answerText: '<link \"css\">',\n      isCorrect: false,\n      answerNum: 3\n    }]\n  }, {\n    questionText: 'What does this * mean on a CSS sheet? ',\n    answerOptions: [{\n      answerText: 'For all H1 elements',\n      isCorrect: false,\n      answerNum: 4\n    }, {\n      answerText: 'For all <div> elements',\n      isCorrect: false,\n      answerNum: 4\n    }, {\n      answerText: 'To display nothing',\n      isCorrect: false,\n      answerNum: 4\n    }, {\n      answerText: 'Selects all elements',\n      isCorrect: true,\n      answerNum: 4\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleReturnOption = currentQuestion => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n\n  const handleResult = () => {\n    setView(\"result\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CSS Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-section\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleResult(),\n                className: \"btn btn-primary\",\n                children: \"View Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), view === \"result\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-section\",\n                children: [\"You scored \", score, \" out of \", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12\",\n                children: testResult.map(result => console.log(result) // <p key={result.answerText}>  </p>\n                )\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : false]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                value: answerOption.isCorrect,\n                onClick: currentanswer => {\n                  testResult.push(answerOption);\n                  handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                },\n                children: answerOption.answerText\n              }, questions.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), currentQuestion > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"return\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReturnOption(currentQuestion),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this) : false]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CssTest, \"EUPFpPJZtx0w1duWOSNYzPM6ymc=\");\n\n_c = CssTest;\nexport default CssTest;\n{// score === questions.length -1 ? (\n  //   <button className=\"btn btn-primary\">View Result</button>\n  // ): false\n  // score >= questions.length -1 ?( \n  //     <div className=\"image-container-test\">\n  //     <img src={imageCongrats} alt=\"congrats\" />\n  //     <p className=\"image-text\">{`${info.firstName} ${info.lastName}`}</p>\n  //     <p className='image-course'>CSS</p>\n  //   </div>\n  // ) : ( \n  //     <div className='row'>\n  //         <h4>Please try again later and remember to study</h4>\n  //     </div>\n  // ) \n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CssTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/CssTest.jsx"],"names":["React","useState","imageCongrats","info","testResult","CssTest","props","questions","questionText","answerOptions","answerText","isCorrect","answerNum","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","view","setView","handleAnswerOptionClick","nextQuestion","length","handleReturnOption","goBack","handleResult","map","result","console","log","answerOption","currentanswer","push","id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport imageCongrats from \"./../../../images/congrats.jpeg\";\nimport \"./test.css\";\nimport info from \"./../../SignUp/signInInfo\";\nimport testResult from './testResult'; \n\nconst CssTest = (props) => { \n\nconst questions = [\n    {\n\n        questionText: 'What does CSS stand for?',\n        answerOptions: [\n            { answerText: 'Creative Style Sheets', isCorrect: false, answerNum: 1 },\n            { answerText: 'Computer Style Sheets', isCorrect: false , answerNum: 1},\n            { answerText: 'Cascading Style Sheets', isCorrect: true , answerNum: 1},\n            { answerText: 'Colorful Style Sheets ', isCorrect: false , answerNum: 1},\n        ],\n    },\n    {\n\n        questionText: 'Why Use CSS?',\n        answerOptions: [\n            { answerText: 'To show content on the web pages', isCorrect: false , answerNum: 2},\n            { answerText: 'CSS is used to define styles for your web pages', isCorrect: true , answerNum: 2},\n            { answerText: 'To write code', isCorrect: false , answerNum: 2},\n            { answerText: 'To display a form', isCorrect: false, answerNum: 2 },\n        ],\n    },\n    {\n\n        questionText: 'Linking your HTML and CSS files.',\n        answerOptions: [\n            { answerText: '<link href=\"file.css\">', isCorrect: true , answerNum: 3},\n            { answerText: '<link hre=\"file.CSS\">', isCorrect: false, answerNum: 3 },\n            { answerText: '<link href=\"css\">', isCorrect: false , answerNum: 3},\n            { answerText: '<link \"css\">', isCorrect: false, answerNum: 3 },\n        ],\n    },\n    {\n      \n        questionText: 'What does this * mean on a CSS sheet? ',\n        answerOptions: [\n            { answerText: 'For all H1 elements', isCorrect: false, answerNum: 4 },\n            { answerText: 'For all <div> elements', isCorrect: false, answerNum: 4 },\n            { answerText: 'To display nothing', isCorrect: false , answerNum: 4},\n            { answerText: 'Selects all elements', isCorrect: true , answerNum: 4},\n        ],\n    },\n];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [view, setView] = useState(\"\");\n  \n  const handleAnswerOptionClick = (isCorrect) => {  \n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    \n  };\n\n  const handleReturnOption = (currentQuestion) => {\n    if (currentQuestion) {\n      const goBack = currentQuestion - 1;\n      setCurrentQuestion(goBack);\n    }\n  };\n  const handleResult = () => { \n    setView(\"result\")\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>CSS Test</h1>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"app\">\n            {showScore ? (\n              <>\n                <div className=\"score-section\">\n                  \n                  <button onClick={() => handleResult() } className=\"btn btn-primary\">View Result</button>\n                </div>\n                { \n                view === \"result\" ? ( \n                  <>\n                  <div className='score-section'>\n                    You scored {score} out of {questions.length}\n                  </div>\n                  <div className='col-12'>\n                    {\n                      testResult.map((result) => ( \n                        console.log(result)\n                        // <p key={result.answerText}>  </p>\n                      \n                      ))\n                    }\n                  </div>\n                  </>\n                ): false\n                }\n              </>\n            ) : (\n              <>\n                <div className=\"question-section\">\n                  <div className=\"question-count\">\n                    <span>Question {currentQuestion + 1}</span>/\n                    {questions.length}\n                  </div>\n                  <div className=\"question-text\">\n                    {questions[currentQuestion].questionText}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  {questions[currentQuestion].answerOptions.map(\n                    (answerOption) => (\n                      <button\n                        key={questions.id}\n                        value={answerOption.isCorrect}\n                        onClick={(currentanswer) => {\n                          testResult.push(answerOption);\n                          handleAnswerOptionClick(answerOption.isCorrect, answerOption);\n                        }}\n                      >\n                        {answerOption.answerText}\n                      </button>\n\n                    )\n                  )}\n                </div>\n\n                {currentQuestion > 0 ? (\n                  <div className=\"return\">\n                    <button onClick={() => handleReturnOption(currentQuestion)}>\n                      Back\n                    </button>\n                  </div>\n                ) : (\n                  false\n                )}\n              </>\n            )} \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CssTest; \n\n\n{ \n\n  // score === questions.length -1 ? (\n\n\n  //   <button className=\"btn btn-primary\">View Result</button>\n  // ): false\n  \n      // score >= questions.length -1 ?( \n      //     <div className=\"image-container-test\">\n      //     <img src={imageCongrats} alt=\"congrats\" />\n      //     <p className=\"image-text\">{`${info.firstName} ${info.lastName}`}</p>\n      //     <p className='image-course'>CSS</p>\n      //   </div>\n      // ) : ( \n           \n      //     <div className='row'>\n      //         <h4>Please try again later and remember to study</h4>\n      //     </div>\n      // ) \n\n  }\n"]},"metadata":{},"sourceType":"module"}