{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/JsTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst JsTest = props => {\n  _s();\n\n  console.log(props.type);\n  const questions = [{\n    questionText: 'What must a variable begin with?',\n    answerOptions: [{\n      answerText: 'HTML tag',\n      isCorrect: false\n    }, {\n      answerText: 'CSS tag',\n      isCorrect: false\n    }, {\n      answerText: 'A letter, $ or _',\n      isCorrect: true\n    }, {\n      answerText: 'Nothing',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What is a variable?',\n    answerOptions: [{\n      answerText: 'A loop',\n      isCorrect: false\n    }, {\n      answerText: 'Container for a piece of data',\n      isCorrect: true\n    }, {\n      answerText: 'Nothing',\n      isCorrect: false\n    }, {\n      answerText: 'A file',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How do you declare variables?',\n    answerOptions: [{\n      answerText: 'var, let and const keywords',\n      isCorrect: true\n    }, {\n      answerText: 'variable',\n      isCorrect: false\n    }, {\n      answerText: 'A = sign',\n      isCorrect: false\n    }, {\n      answerText: 'A keyword',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'DOM stands for?',\n    answerOptions: [{\n      answerText: 'Document Out Matter',\n      isCorrect: false\n    }, {\n      answerText: 'Document Outter Mammals',\n      isCorrect: false\n    }, {\n      answerText: 'Document Other Meaning',\n      isCorrect: false\n    }, {\n      answerText: 'Document Object model',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"JavaScript Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-section\",\n            children: [\"You scored \", score, \" out of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 5\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Question \", currentQuestion + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 8\n                }, this), \"/\", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: questions[currentQuestion].questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-section\",\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n                children: answerOption.answerText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 8\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JsTest, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = JsTest;\nexport default JsTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"JsTest\");","map":{"version":3,"sources":["/home/dev/lfz/elearning-app/elearning-app/src/components/MyClasses/Test/JsTest.jsx"],"names":["React","useState","JsTest","props","console","log","type","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nconst JsTest = (props) => { \nconsole.log(props.type)\nconst questions = [\n    {\n        questionText: 'What must a variable begin with?',\n        answerOptions: [\n            { answerText: 'HTML tag', isCorrect: false },\n            { answerText: 'CSS tag', isCorrect: false },\n            { answerText: 'A letter, $ or _', isCorrect: true },\n            { answerText: 'Nothing', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'What is a variable?',\n        answerOptions: [\n            { answerText: 'A loop', isCorrect: false },\n            { answerText: 'Container for a piece of data', isCorrect: true },\n            { answerText: 'Nothing', isCorrect: false },\n            { answerText: 'A file', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'How do you declare variables?',\n        answerOptions: [\n            { answerText: 'var, let and const keywords', isCorrect: true },\n            { answerText: 'variable', isCorrect: false },\n            { answerText: 'A = sign', isCorrect: false },\n            { answerText: 'A keyword', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'DOM stands for?',\n        answerOptions: [\n            { answerText: 'Document Out Matter', isCorrect: false },\n            { answerText: 'Document Outter Mammals', isCorrect: false },\n            { answerText: 'Document Other Meaning', isCorrect: false },\n            { answerText: 'Document Object model', isCorrect: true },\n        ],\n    },\n];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);\nconst [showScore, setShowScore] = useState(false);\nconst [score, setScore] = useState(0);\n\nconst handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n        setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n    } else {\n        setShowScore(true);\n    }\n};\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>JavaScript Test</h1>\n        </div>\n        <div className='col-12'>\n        <div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JsTest;\n"]},"metadata":{},"sourceType":"module"}